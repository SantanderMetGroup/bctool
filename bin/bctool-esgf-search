#!/bin/bash

usage() {
    echo "${0} [ -h ] [ -f FIELDS ] [ -i INDEX ] [ -q QUERY ] [ -m MAX_RESULTS] [ -s STARTING_OFFSET ] SELECTION-FILE..." >&2
}

check() {
    if ! command -v "$1" &>/dev/null; then
        echo "$1 is not installed, install $1" >&2
        exit 1
    fi
}

check jq
check curl

# $1 params
# $2 starting offset, default is 0
# $3 max number of results, default is unlimited
# globals: index, fields
search() {
    if [ -z "$fields" ]; then
        url="https://${index}/esg-search/search?format=application%2Fsolr%2Bjson&${1// /&}"
    else
        url="https://${index}/esg-search/search?format=application%2Fsolr%2Bjson&fields=${fields}&${1// /&}"
    fi

    test_url="${url}&limit=0"
    if ! curl -f -s "${url}&limit=0"&>/dev/null; then
        echo "HTTP invalid request. Query: $test_url" >&2
        return 0
    fi

    numFound=$(curl -s "${url}&limit=0" | jq '.response.numFound')
    if [ "$numFound" -eq 0 ]; then
        echo "No results found. Query: ${url}&limit=0" >&2
        return 0
    fi

    # Search
    limit=10000
    i=0
    pending=${3:-$numFound}
    while [ $pending -gt 0 ]; do
        current=$(($i * $limit + ${2:-0}))

        echo "Pending: ${pending}, i=${i}, URL=${url}&limit=${limit}&offset=${current}" >&2
        curl -s "${url}&limit=${limit}&offset=${current}" | jq -c ".response.docs[:${pending}]|.[]"

        pending=$(expr $pending - $limit)
        let i=i+1
    done
}

while [[ $# -gt 0 ]]
do
    case "$1" in
    -f | --fields)
        fields="$2"
        shift 2
        ;;
    -h | --help)
        usage
        exit 1
        shift
        ;;
    -i | --index)
        index="$2"
        shift 2
        ;;
    -m | --max-results)
        max_results="$2"
        shift 2
        ;;
    -q | --query)
        q="$2"
        query="${q// /&}"
        shift 2
        ;;
    -s | --starting-offset)
        starting_offset="$2"
        shift 2
        ;;
    -*)
        echo "Error: Unknown options: $1" >&2
        exit 1
        ;;
    *)
        files="$@"
        break
        ;;
    esac
done

if [ -z "$files" ] && [ -z "$query" ] ; then
    usage
    exit 1
fi

if [ -z "$index" ]; then
    index="esgf-node.llnl.gov"
fi

if [ -z "$starting_offset" ]; then
    starting_offset=0
fi

if [ ! -z "$query" ]; then
    search "$query" "$starting_offset" "$max_results"

    if [ -z "$files" ]; then
        exit 0
    fi
fi

# Concatenate selection files with an empty line as separator and
# also remove redundant whitespaces
params=""
awk 'FNR==1 && NR > 1{print ""}{print $0}END{print ""}' $files | \
    sed 's/  */ /g; s/    *$//; s/^  *//' | \
    while IFS= read -r line
do
    # Empty line, perform search
    if [ -z "$line" ] && [ ! -z "$params" ]; then
        search "$params" "$starting_offset" "$max_results"
        params=""
    # Avoid leading whitespaces
    elif [ -z "$params" ]; then
        params="$line"
    else
        params="$params $line"
    fi
done
